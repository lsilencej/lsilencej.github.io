<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客美化（持续更新）</title>
    <link href="/2021/07/14/beautyblog/"/>
    <url>/2021/07/14/beautyblog/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>填坑，hexo博客美化</p>          </div><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文讲述一些Hexo博客的美化，不同主题实现的方法不尽相同，本文介绍在fluid主题下的实现方法</p><p>本文只提供代码，不提供图片展示效果，具体效果还请百度（<del>好吧，只是我懒</del>）</p><p><strong>~持续更新~~</strong></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h3><p>右下角萌萌的卡通人物</p><p><a href="https://github.com/EYHN/hexo-helper-live2d">项目地址</a></p><p>输入以下代码来安装live2d：</p><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">$ npm install <span class="hljs-comment">--save hexo-helper-live2d</span><br></code></pre></div></td></tr></table></figure><p><a href="https://github.com/xiazeyu/live2d-widget-models">模型种类</a></p><p><a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a></p><p>在上面找到自己喜欢的模型的名字，替换下面的packagename即可</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs text">$ npm install packagename<br></code></pre></div></td></tr></table></figure><p>打开站点根目录下的_config.yml，添加如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">live2d:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">scriptFrom:</span> <span class="hljs-string">local</span><br>    <span class="hljs-attr">model:</span> <br>        <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-haruto</span> <span class="hljs-comment">#模型选择</span><br>    <span class="hljs-attr">display:</span> <br>        <span class="hljs-attr">position:</span> <span class="hljs-string">right</span>  <span class="hljs-comment">#模型位置</span><br>        <span class="hljs-attr">width:</span> <span class="hljs-number">150</span>       <span class="hljs-comment">#模型宽度</span><br>        <span class="hljs-attr">height:</span> <span class="hljs-number">300</span>      <span class="hljs-comment">#模型高度</span><br>    <span class="hljs-attr">mobile:</span> <br>        <span class="hljs-attr">show:</span> <span class="hljs-literal">false</span>      <span class="hljs-comment">#是否在手机端显示</span><br></code></pre></div></td></tr></table></figure><h3 id="添加鼠标点击效果"><a href="#添加鼠标点击效果" class="headerlink" title="添加鼠标点击效果"></a>添加鼠标点击效果</h3><p><strong>爱心效果</strong></p><p>在/themes/fluid/source/js 下新建文件love.js，添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">!<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,a</span>)</span>&#123;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>)</span>&#123;c(<span class="hljs-string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="hljs-number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="hljs-number">1</span>)):(d[e].y--,d[e].scale+=<span class="hljs-number">.004</span>,d[e].alpha-=<span class="hljs-number">.013</span>,d[e].el.style.cssText=<span class="hljs-string">&quot;left:&quot;</span>+d[e].x+<span class="hljs-string">&quot;px;top:&quot;</span>+d[e].y+<span class="hljs-string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="hljs-string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="hljs-string">&quot;,&quot;</span>+d[e].scale+<span class="hljs-string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="hljs-string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">&quot;div&quot;</span>);a.className=<span class="hljs-string">&quot;heart&quot;</span>,d.push(&#123;<span class="hljs-attr">el</span>:a,<span class="hljs-attr">x</span>:e.clientX-<span class="hljs-number">5</span>,<span class="hljs-attr">y</span>:e.clientY-<span class="hljs-number">5</span>,<span class="hljs-attr">scale</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">&quot;style&quot;</span>);a.type=<span class="hljs-string">&quot;text/css&quot;</span>;<span class="hljs-keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="hljs-keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;rgb(&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-built_in">Math</span>.random())+<span class="hljs-string">&quot;)&quot;</span>&#125;<span class="hljs-keyword">var</span> d=[];e.requestAnimationFrame=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-built_in">setTimeout</span>(e,<span class="hljs-number">1e3</span>/<span class="hljs-number">60</span>)&#125;&#125;(),n()&#125;(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>);<br></code></pre></div></td></tr></table></figure><p>在/themes/fluid/layout/layout.ejs 文件末尾添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/love.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>烟花爆炸效果</strong></p><p>在/themes/fluid/source/js 下新建文件fireworks.js，添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateCoords</span>(<span class="hljs-params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="hljs-number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="hljs-number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setParticuleDirection</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> t=anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-built_in">Math</span>.PI/<span class="hljs-number">180</span>,a=anime.random(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.x+n*<span class="hljs-built_in">Math</span>.cos(t),<span class="hljs-attr">y</span>:e.y+n*<span class="hljs-built_in">Math</span>.sin(t)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticule</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="hljs-number">0</span>,colors.length-<span class="hljs-number">1</span>)],a.radius=anime.random(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCircle</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=<span class="hljs-string">&quot;#F00&quot;</span>,a.radius=<span class="hljs-number">0.1</span>,a.alpha=<span class="hljs-number">0.5</span>,a.lineWidth=<span class="hljs-number">6</span>,a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderParticule</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animateParticules</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=createCircle(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.x&#125;,<span class="hljs-attr">y</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.y&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).add(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.random(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-built_in">this</span>,i=<span class="hljs-built_in">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;canvasEl.width=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerWidth,canvasEl.height=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerHeight,canvasEl.style.width=<span class="hljs-built_in">window</span>.innerWidth+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.style.height=<span class="hljs-built_in">window</span>.innerHeight+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>).scale(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=anime(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="hljs-built_in">document</span>.addEventListener(tap,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),setCanvasSize(),<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateCoords</span>(<span class="hljs-params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="hljs-number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="hljs-number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setParticuleDirection</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">var</span> t=anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-built_in">Math</span>.PI/<span class="hljs-number">180</span>,a=anime.random(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.random(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.x+n*<span class="hljs-built_in">Math</span>.cos(t),<span class="hljs-attr">y</span>:e.y+n*<span class="hljs-built_in">Math</span>.sin(t)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createParticule</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="hljs-number">0</span>,colors.length-<span class="hljs-number">1</span>)],a.radius=anime.random(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCircle</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.x=e,a.y=t,a.color=<span class="hljs-string">&quot;#F00&quot;</span>,a.radius=<span class="hljs-number">0.1</span>,a.alpha=<span class="hljs-number">0.5</span>,a.lineWidth=<span class="hljs-number">6</span>,a.draw=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,!<span class="hljs-number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderParticule</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animateParticules</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=createCircle(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.x&#125;,<span class="hljs-attr">y</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-keyword">return</span> e.endPos.y&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).add(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.random(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.random(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">e,t</span>)</span>&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-built_in">this</span>,i=<span class="hljs-built_in">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;canvasEl.width=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerWidth,canvasEl.height=<span class="hljs-number">2</span>*<span class="hljs-built_in">window</span>.innerHeight,canvasEl.style.width=<span class="hljs-built_in">window</span>.innerWidth+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.style.height=<span class="hljs-built_in">window</span>.innerHeight+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.getContext(<span class="hljs-string">&quot;2d&quot;</span>).scale(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=anime(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;ctx.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="hljs-built_in">document</span>.addEventListener(tap,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),setCanvasSize(),<span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;;<br></code></pre></div></td></tr></table></figure><p>在/themes/fluid/layout/layout.ejs 文件添加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>字体效果</strong></p><p>在/themes/fluid/source/js 下新建文件click_text.js，添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">var</span> a_idx = <span class="hljs-number">0</span>;<br>jQuery(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$</span>) </span>&#123;<br>    $(<span class="hljs-string">&quot;body&quot;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span><br>        (<span class="hljs-string">&quot;富强&quot;</span>, <span class="hljs-string">&quot;民主&quot;</span>, <span class="hljs-string">&quot;文明&quot;</span>, <span class="hljs-string">&quot;和谐&quot;</span>, <span class="hljs-string">&quot;自由&quot;</span>, <span class="hljs-string">&quot;平等&quot;</span>, <span class="hljs-string">&quot;公正&quot;</span>, <span class="hljs-string">&quot;法治&quot;</span>, <span class="hljs-string">&quot;爱国&quot;</span>, <span class="hljs-string">&quot;敬业&quot;</span>, <span class="hljs-string">&quot;诚信&quot;</span>, <span class="hljs-string">&quot;友善&quot;</span>);<br>        <span class="hljs-keyword">var</span> $i = $(<span class="hljs-string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);<br>        a_idx = (a_idx + <span class="hljs-number">1</span>) % a.length;<br>        <span class="hljs-keyword">var</span> x = e.pageX,<br>        y = e.pageY;<br>        $i.css(&#123;<br>            <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-number">5</span>,<br>            <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">20</span>,<br>            <span class="hljs-string">&quot;left&quot;</span>: x,<br>            <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>            <span class="hljs-string">&quot;font-weight&quot;</span>: <span class="hljs-string">&quot;bold&quot;</span>,<br>            <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;#FF0000&quot;</span><br>        &#125;);<br>        $(<span class="hljs-string">&quot;body&quot;</span>).append($i);<br>        $i.animate(&#123;<br>            <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">180</span>,<br>            <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span><br>        &#125;,<br>            <span class="hljs-number">3000</span>,<br>            <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>                $i.remove();<br>            &#125;);<br>    &#125;);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&#x27;delay()&#x27;</span>, <span class="hljs-number">2000</span>);<br>&#125;);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delay</span>(<span class="hljs-params"></span>) </span>&#123;<br>    $(<span class="hljs-string">&quot;.buryit&quot;</span>).removeAttr(<span class="hljs-string">&quot;onclick&quot;</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p>其中的社会主义核心价值观可以改成你想要的其他文字</p><p>在/themes/fluid/layout/layout.ejs 文件添加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--单击显示文字--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/click_show_text.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="添加彩色滚动变换字体"><a href="#添加彩色滚动变换字体" class="headerlink" title="添加彩色滚动变换字体"></a>添加彩色滚动变换字体</h3><p>在你想要添加彩色滚动变换字体的地方添加以下代码即可，文字可自行更改：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;binft&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> binft = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">r</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">t</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> b[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * b.length)]</span><br><span class="javascript">      &#125;  </span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">94</span> * <span class="hljs-built_in">Math</span>.random() + <span class="hljs-number">33</span>)</span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params">r</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-built_in">document</span>.createDocumentFragment(), i = <span class="hljs-number">0</span>; r &gt; i; i++) &#123;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> l = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;span&quot;</span>);</span><br><span class="javascript">          l.textContent = e(), l.style.color = t(), n.appendChild(l)</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> n</span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> t = o[c.skillI];</span><br><span class="javascript">        c.step ? c.step-- : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= <span class="hljs-number">0</span> &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : <span class="hljs-string">&quot;forward&quot;</span> === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = <span class="hljs-string">&quot;backward&quot;</span>, c.delay = a) : c.skillP &gt; <span class="hljs-number">0</span> ? (c.text = c.text.slice(<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>), c.skillP--) : (c.skillI = (c.skillI + <span class="hljs-number">1</span>) % o.length, c.direction = <span class="hljs-string">&quot;forward&quot;</span>)), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? <span class="hljs-built_in">Math</span>.min(s, s + c.prefixP) : <span class="hljs-built_in">Math</span>.min(s, t.length - c.skillP))), <span class="hljs-built_in">setTimeout</span>(i, d)</span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> l = <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">      o = [<span class="hljs-string">&quot;青青陵上柏，磊磊涧中石。&quot;</span>, <span class="hljs-string">&quot;人生天地间，忽如远行客。&quot;</span>,<span class="hljs-string">&quot;斗酒相娱乐，聊厚不为薄。&quot;</span>, <span class="hljs-string">&quot;驱车策驽马，游戏宛与洛。&quot;</span>,<span class="hljs-string">&quot;洛中何郁郁，冠带自相索。&quot;</span>,<span class="hljs-string">&quot;长衢罗夹巷，王侯多第宅。&quot;</span>,<span class="hljs-string">&quot;两宫遥相望，双阙百余尺。&quot;</span>,<span class="hljs-string">&quot;极宴娱心意，戚戚何所迫？&quot;</span>].map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">r</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> r + <span class="hljs-string">&quot;&quot;</span></span><br><span class="javascript">      &#125;),</span><br><span class="javascript">      a = <span class="hljs-number">2</span>,</span><br><span class="javascript">      g = <span class="hljs-number">1</span>,</span><br><span class="javascript">      s = <span class="hljs-number">5</span>,</span><br><span class="javascript">      d = <span class="hljs-number">75</span>,</span><br><span class="javascript">      b = [<span class="hljs-string">&quot;rgb(110,64,170)&quot;</span>, <span class="hljs-string">&quot;rgb(150,61,179)&quot;</span>, <span class="hljs-string">&quot;rgb(191,60,175)&quot;</span>, <span class="hljs-string">&quot;rgb(228,65,157)&quot;</span>, <span class="hljs-string">&quot;rgb(254,75,131)&quot;</span>, <span class="hljs-string">&quot;rgb(255,94,99)&quot;</span>, <span class="hljs-string">&quot;rgb(255,120,71)&quot;</span>, <span class="hljs-string">&quot;rgb(251,150,51)&quot;</span>, <span class="hljs-string">&quot;rgb(226,183,47)&quot;</span>, <span class="hljs-string">&quot;rgb(198,214,60)&quot;</span>, <span class="hljs-string">&quot;rgb(175,240,91)&quot;</span>, <span class="hljs-string">&quot;rgb(127,246,88)&quot;</span>, <span class="hljs-string">&quot;rgb(82,246,103)&quot;</span>, <span class="hljs-string">&quot;rgb(48,239,130)&quot;</span>, <span class="hljs-string">&quot;rgb(29,223,163)&quot;</span>, <span class="hljs-string">&quot;rgb(26,199,194)&quot;</span>, <span class="hljs-string">&quot;rgb(35,171,216)&quot;</span>, <span class="hljs-string">&quot;rgb(54,140,225)&quot;</span>, <span class="hljs-string">&quot;rgb(76,110,219)&quot;</span>, <span class="hljs-string">&quot;rgb(96,84,200)&quot;</span>],</span><br><span class="javascript">      c = &#123;</span><br><span class="javascript">        <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">prefixP</span>: -s,</span><br><span class="javascript">        <span class="hljs-attr">skillI</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">        <span class="hljs-attr">skillP</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">        <span class="hljs-attr">direction</span>: <span class="hljs-string">&quot;forward&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">delay</span>: a,</span><br><span class="javascript">        <span class="hljs-attr">step</span>: g</span><br><span class="javascript">      &#125;;</span><br><span class="javascript">      i()</span><br><span class="javascript">      &#125;;</span><br><span class="javascript">      binft(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;binft&#x27;</span>));</span><br><span class="javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="添加网易云音乐播放器"><a href="#添加网易云音乐播放器" class="headerlink" title="添加网易云音乐播放器"></a>添加网易云音乐播放器</h3><p>打开网页版的网易云音乐，打开歌单</p><p><img src="/images/post/hexo_beauty/1.png"></p><p>点击<strong>生成外链播放器</strong></p><p><img src="/images/post/hexo_beauty/2.png"></p><p>复制下面生成的html代码</p><p><img src="/images/post/hexo_beauty/3.png"></p><p>添加到你想让它展示的地方，auto=1为打开网页自动播放音乐，auto=0为不自动播放</p><h3 id="背景效果"><a href="#背景效果" class="headerlink" title="背景效果"></a>背景效果</h3><p><strong>动态线条</strong></p><p>在/themes/fluid/layout/layout.ejs 文件添加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--动态线条背景--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">color</span>=<span class="hljs-string">&quot;220,220,220&quot;</span> <span class="hljs-attr">opacity</span>=<span class="hljs-string">&#x27;0.7&#x27;</span> <span class="hljs-attr">zIndex</span>=<span class="hljs-string">&quot;-2&quot;</span> <span class="hljs-attr">count</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0 ~ 1），默认：0.5</li><li> count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><p><strong>雪花效果</strong></p><p>在/themes/fluid/source/js 下新建文件snow.js，添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">/*样式一*/</span><br>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">$</span>)</span>&#123;<br>    $.fn.snow = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">options</span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> $flake = $(<span class="hljs-string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>).css(&#123;<span class="hljs-string">&#x27;position&#x27;</span>: <span class="hljs-string">&#x27;absolute&#x27;</span>,<span class="hljs-string">&#x27;z-index&#x27;</span>:<span class="hljs-string">&#x27;9999&#x27;</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;-50px&#x27;</span>&#125;).html(<span class="hljs-string">&#x27;&amp;#10052;&#x27;</span>),<br>    documentHeight  = $(<span class="hljs-built_in">document</span>).height(),<br>    documentWidth   = $(<span class="hljs-built_in">document</span>).width(),<br>    defaults = &#123;<br>        <span class="hljs-attr">minSize</span>     : <span class="hljs-number">10</span>,<br>        <span class="hljs-attr">maxSize</span>     : <span class="hljs-number">20</span>,<br>        <span class="hljs-attr">newOn</span>       : <span class="hljs-number">1000</span>,<br>        <span class="hljs-attr">flakeColor</span>  : <span class="hljs-string">&quot;#AFDAEF&quot;</span> <span class="hljs-comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span><br>    &#125;,<br>    options = $.extend(&#123;&#125;, defaults, options);<br>    <span class="hljs-keyword">var</span> interval= <span class="hljs-built_in">setInterval</span>( <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> startPositionLeft = <span class="hljs-built_in">Math</span>.random() * documentWidth - <span class="hljs-number">100</span>,<br>    startOpacity = <span class="hljs-number">0.5</span> + <span class="hljs-built_in">Math</span>.random(),<br>    sizeFlake = options.minSize + <span class="hljs-built_in">Math</span>.random() * options.maxSize,<br>    endPositionTop = documentHeight - <span class="hljs-number">200</span>,<br>    endPositionLeft = startPositionLeft - <span class="hljs-number">500</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">500</span>,<br>    durationFall = documentHeight * <span class="hljs-number">10</span> + <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">5000</span>;<br>    $flake.clone().appendTo(<span class="hljs-string">&#x27;body&#x27;</span>).css(&#123;<br>        <span class="hljs-attr">left</span>: startPositionLeft,<br>        <span class="hljs-attr">opacity</span>: startOpacity,<br>        <span class="hljs-string">&#x27;font-size&#x27;</span>: sizeFlake,<br>        <span class="hljs-attr">color</span>: options.flakeColor<br>    &#125;).animate(&#123;<br>        <span class="hljs-attr">top</span>: endPositionTop,<br>        <span class="hljs-attr">left</span>: endPositionLeft,<br>        <span class="hljs-attr">opacity</span>: <span class="hljs-number">0.2</span><br>    &#125;,durationFall,<span class="hljs-string">&#x27;linear&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        $(<span class="hljs-built_in">this</span>).remove()<br>    &#125;);<br>    &#125;, options.newOn);<br>    &#125;;<br>&#125;)(jQuery);<br>$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    $.fn.snow(&#123; <br>        <span class="hljs-attr">minSize</span>: <span class="hljs-number">5</span>, <span class="hljs-comment">/* 定义雪花最小尺寸 */</span><br>        <span class="hljs-attr">maxSize</span>: <span class="hljs-number">50</span>,<span class="hljs-comment">/* 定义雪花最大尺寸 */</span><br>        <span class="hljs-attr">newOn</span>: <span class="hljs-number">300</span>  <span class="hljs-comment">/* 定义密集程度，数字越小越密集 */</span><br>    &#125;);<br>&#125;);<br><span class="hljs-comment">/*样式二*/</span><br><span class="hljs-comment">/* 控制下雪 */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">snowFall</span>(<span class="hljs-params">snow</span>) </span>&#123;<br>    <span class="hljs-comment">/* 可配置属性 */</span><br>    snow = snow || &#123;&#125;;<br>    <span class="hljs-built_in">this</span>.maxFlake = snow.maxFlake || <span class="hljs-number">200</span>;   <span class="hljs-comment">/* 最多片数 */</span><br>    <span class="hljs-built_in">this</span>.flakeSize = snow.flakeSize || <span class="hljs-number">10</span>;  <span class="hljs-comment">/* 雪花形状 */</span><br>    <span class="hljs-built_in">this</span>.fallSpeed = snow.fallSpeed || <span class="hljs-number">1</span>;   <span class="hljs-comment">/* 坠落速度 */</span><br>&#125;<br><span class="hljs-comment">/* 兼容写法 */</span><br>requestAnimationFrame = <span class="hljs-built_in">window</span>.requestAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.mozRequestAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.webkitRequestAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.msRequestAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.oRequestAnimationFrame ||<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) </span>&#123; <span class="hljs-built_in">setTimeout</span>(callback, <span class="hljs-number">1000</span> / <span class="hljs-number">60</span>); &#125;;<br><br>cancelAnimationFrame = <span class="hljs-built_in">window</span>.cancelAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.mozCancelAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.webkitCancelAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.msCancelAnimationFrame ||<br>    <span class="hljs-built_in">window</span>.oCancelAnimationFrame;<br><span class="hljs-comment">/* 开始下雪 */</span><br>snowFall.prototype.start = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">/* 创建画布 */</span><br>    snowCanvas.apply(<span class="hljs-built_in">this</span>);<br>    <span class="hljs-comment">/* 创建雪花形状 */</span><br>    createFlakes.apply(<span class="hljs-built_in">this</span>);<br>    <span class="hljs-comment">/* 画雪 */</span><br>    drawSnow.apply(<span class="hljs-built_in">this</span>)<br>&#125;<br><span class="hljs-comment">/* 创建画布 */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">snowCanvas</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">/* 添加Dom结点 */</span><br>    <span class="hljs-keyword">var</span> snowcanvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;canvas&quot;</span>);<br>    snowcanvas.id = <span class="hljs-string">&quot;snowfall&quot;</span>;<br>    snowcanvas.width = <span class="hljs-built_in">window</span>.innerWidth;<br>    snowcanvas.height = <span class="hljs-built_in">document</span>.body.clientHeight;<br>    snowcanvas.setAttribute(<span class="hljs-string">&quot;style&quot;</span>, <span class="hljs-string">&quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;</span>);<br>    <span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].appendChild(snowcanvas);<br>    <span class="hljs-built_in">this</span>.canvas = snowcanvas;<br>    <span class="hljs-built_in">this</span>.ctx = snowcanvas.getContext(<span class="hljs-string">&quot;2d&quot;</span>);<br>    <span class="hljs-comment">/* 窗口大小改变的处理 */</span><br>    <span class="hljs-built_in">window</span>.onresize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        snowcanvas.width = <span class="hljs-built_in">window</span>.innerWidth;<br>        <span class="hljs-comment">/* snowcanvas.height = window.innerHeight */</span><br>    &#125;<br>&#125;<br><span class="hljs-comment">/* 雪运动对象 */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">flakeMove</span>(<span class="hljs-params">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.x = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * canvasWidth);   <span class="hljs-comment">/* x坐标 */</span><br>    <span class="hljs-built_in">this</span>.y = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * canvasHeight);  <span class="hljs-comment">/* y坐标 */</span><br>    <span class="hljs-built_in">this</span>.size = <span class="hljs-built_in">Math</span>.random() * flakeSize + <span class="hljs-number">2</span>;          <span class="hljs-comment">/* 形状 */</span><br>    <span class="hljs-built_in">this</span>.maxSize = flakeSize;                           <span class="hljs-comment">/* 最大形状 */</span><br>    <span class="hljs-built_in">this</span>.speed = <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">1</span> + fallSpeed;         <span class="hljs-comment">/* 坠落速度 */</span><br>    <span class="hljs-built_in">this</span>.fallSpeed = fallSpeed;                         <span class="hljs-comment">/* 坠落速度 */</span><br>    <span class="hljs-built_in">this</span>.velY = <span class="hljs-built_in">this</span>.speed;                             <span class="hljs-comment">/* Y方向速度 */</span><br>    <span class="hljs-built_in">this</span>.velX = <span class="hljs-number">0</span>;                                      <span class="hljs-comment">/* X方向速度 */</span><br>    <span class="hljs-built_in">this</span>.stepSize = <span class="hljs-built_in">Math</span>.random() / <span class="hljs-number">30</span>;                 <span class="hljs-comment">/* 步长 */</span><br>    <span class="hljs-built_in">this</span>.step = <span class="hljs-number">0</span>                                       <span class="hljs-comment">/* 步数 */</span><br>&#125;<br>flakeMove.prototype.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> x = <span class="hljs-built_in">this</span>.x,<br>        y = <span class="hljs-built_in">this</span>.y;<br>    <span class="hljs-comment">/* 左右摆动(余弦) */</span><br>    <span class="hljs-built_in">this</span>.velX *= <span class="hljs-number">0.98</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.velY &lt;= <span class="hljs-built_in">this</span>.speed) &#123;<br>        <span class="hljs-built_in">this</span>.velY = <span class="hljs-built_in">this</span>.speed<br>    &#125;<br>    <span class="hljs-built_in">this</span>.velX += <span class="hljs-built_in">Math</span>.cos(<span class="hljs-built_in">this</span>.step += <span class="hljs-number">.05</span>) * <span class="hljs-built_in">this</span>.stepSize;<br><br>    <span class="hljs-built_in">this</span>.y += <span class="hljs-built_in">this</span>.velY;<br>    <span class="hljs-built_in">this</span>.x += <span class="hljs-built_in">this</span>.velX;<br>    <span class="hljs-comment">/* 飞出边界的处理 */</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.x &gt;= canvas.width || <span class="hljs-built_in">this</span>.x &lt;= <span class="hljs-number">0</span> || <span class="hljs-built_in">this</span>.y &gt;= canvas.height || <span class="hljs-built_in">this</span>.y &lt;= <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">this</span>.reset(canvas.width, canvas.height)<br>    &#125;<br>&#125;;<br><span class="hljs-comment">/* 飞出边界-放置最顶端继续坠落 */</span><br>flakeMove.prototype.reset = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">width, height</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.x = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * width);<br>    <span class="hljs-built_in">this</span>.y = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">this</span>.size = <span class="hljs-built_in">Math</span>.random() * <span class="hljs-built_in">this</span>.maxSize + <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">this</span>.speed = <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">1</span> + <span class="hljs-built_in">this</span>.fallSpeed;<br>    <span class="hljs-built_in">this</span>.velY = <span class="hljs-built_in">this</span>.speed;<br>    <span class="hljs-built_in">this</span>.velX = <span class="hljs-number">0</span>;<br>&#125;;<br><span class="hljs-comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br>flakeMove.prototype.render = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ctx</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> snowFlake = ctx.createRadialGradient(<span class="hljs-built_in">this</span>.x, <span class="hljs-built_in">this</span>.y, <span class="hljs-number">0</span>, <span class="hljs-built_in">this</span>.x, <span class="hljs-built_in">this</span>.y, <span class="hljs-built_in">this</span>.size);<br>    snowFlake.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;rgba(255, 255, 255, 0.9)&quot;</span>);  <span class="hljs-comment">/* 此处是雪花颜色，默认是白色 */</span><br>    snowFlake.addColorStop(<span class="hljs-number">.5</span>, <span class="hljs-string">&quot;rgba(255, 255, 255, 0.5)&quot;</span>); <span class="hljs-comment">/* 若要改为其他颜色，请自行查 */</span><br>    snowFlake.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;rgba(255, 255, 255, 0)&quot;</span>);    <span class="hljs-comment">/* 找16进制的RGB 颜色代码。 */</span><br>    ctx.save();<br>    ctx.fillStyle = snowFlake;<br>    ctx.beginPath();<br>    ctx.arc(<span class="hljs-built_in">this</span>.x, <span class="hljs-built_in">this</span>.y, <span class="hljs-built_in">this</span>.size, <span class="hljs-number">0</span>, <span class="hljs-built_in">Math</span>.PI * <span class="hljs-number">2</span>);<br>    ctx.fill();<br>    ctx.restore();<br>&#125;;<br><span class="hljs-comment">/* 创建雪花-定义形状 */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createFlakes</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> maxFlake = <span class="hljs-built_in">this</span>.maxFlake,<br>        flakes = <span class="hljs-built_in">this</span>.flakes = [],<br>        canvas = <span class="hljs-built_in">this</span>.canvas;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; maxFlake; i++) &#123;<br>        flakes.push(<span class="hljs-keyword">new</span> flakeMove(canvas.width, canvas.height, <span class="hljs-built_in">this</span>.flakeSize, <span class="hljs-built_in">this</span>.fallSpeed))<br>    &#125;<br>&#125;<br><span class="hljs-comment">/* 画雪 */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawSnow</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> maxFlake = <span class="hljs-built_in">this</span>.maxFlake,<br>        flakes = <span class="hljs-built_in">this</span>.flakes;<br>    ctx = <span class="hljs-built_in">this</span>.ctx, canvas = <span class="hljs-built_in">this</span>.canvas, that = <span class="hljs-built_in">this</span>;<br>    <span class="hljs-comment">/* 清空雪花 */</span><br>    ctx.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.width, canvas.height);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; maxFlake; e++) &#123;<br>        flakes[e].update();<br>        flakes[e].render(ctx);<br>    &#125;<br>    <span class="hljs-comment">/*  一帧一帧的画 */</span><br>    <span class="hljs-built_in">this</span>.loop = requestAnimationFrame(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        drawSnow.apply(that);<br>    &#125;);<br>&#125;<br><span class="hljs-comment">/* 调用及控制方法 */</span><br><span class="hljs-keyword">var</span> snow = <span class="hljs-keyword">new</span> snowFall(&#123;<span class="hljs-attr">maxFlake</span>:<span class="hljs-number">60</span>&#125;);<br>snow.start();<br></code></pre></div></td></tr></table></figure><p>在/themes/fluid/layout/layout.ejs 文件添加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 雪花特效 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;\js\snow.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>如果没有效果，在前者代码前引入jQuery：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://libs.baidu.com/jquery/1.8.3/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>动态彩带</strong></p><p>在/themes/fluid/layout/layout.ejs 文件的body前添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs text">&lt;!-- 样式一（鼠标点击更换样式） --&gt;<br>&lt;script src=&quot;https://g.joyinshare.com/hc/ribbon.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br>&lt;!-- 样式二（飘动的彩带） --&gt;<br>&lt;script src=&quot;https://g.joyinshare.com/hc/piao.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>干货</category>
      
      <category>博客</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记录一次悲惨的回家经历</title>
    <link href="/2021/07/14/20210714/"/>
    <url>/2021/07/14/20210714/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>麻了，都给我整不会了</p>          </div><span id="more"></span><h2 id="7-10"><a href="#7-10" class="headerlink" title="7.10"></a>7.10</h2><p>夏令营在7.10晚上结束，选择退出了学校的ACM社团（<del>因为不想刷题了</del>），算法的学习会仍然继续下去，可能以后会在博客开个算法系列，专门分享算法的知识，夏令营结课的最后比赛ak了，算是对自己的OI生涯的一个交代吧</p><p>就是因为夏令营比别人多一天时间，否则7.10走了就没那么多事了，大暴雨7.11才来</p><h2 id="7-11"><a href="#7-11" class="headerlink" title="7.11"></a>7.11</h2><p>买的本来是7.11下午六点多将近七点的机票，恰巧碰到难得一遇的暴雨天，天津航空中午直接发短信说取消了，五点多的深圳航空并没取消，本来说改签这趟，结果剩余的几张票秒没，只好改签明天同时间的，改的票比之前买的还便宜，还好改的早后来涨价直接翻倍</p><p>打包好衣服这些包裹准备去寄，上门取件的小哥把车开了过来，外面这个时候还是阴天，刚下楼直接给我下雨，还没有一个增大的过程，我和快递小哥直接隔了一条河一样，等了差不多半小时雨还没有小的迹象，快递小哥叫我先上楼，刚上楼到寝室坐下快递小哥又打个电话叫我下楼，说是停雨了，我一看还真是，急冲冲跑下去给了快递小哥</p><p>还好给的及时，给完了赶快跑上来雨又继续下，大概三点左右雨停了，然后就再也没下过，所以我的飞机莫名就取消了，深航的照样飞走了</p><h2 id="7-12"><a href="#7-12" class="headerlink" title="7.12"></a>7.12</h2><p>兴冲冲的第二次收拾好行李，铺好床，外面一直在下小雨，天也是阴的，一直到中午收到条短信说是延机两小时直接延到八点，我寻思着还好没取消，看了看原来五点的深航取消了，明天又没飞机，只能改签我这一班，于是票价又开始涨</p><p>下午一下午没下雨，急冲冲的收拾好东西，拿着室友从食堂带的饼走了，刚出楼门就开始下雨，越下越大，没办法只好跑到地铁站，等地铁的时候匆忙吃了两口饼，还好赶上了，地铁到处转来转去用了一个多小时，终于到了机场，然后就是值机之类的，把冷了的饼吃完过安检，到目前为止一切正常</p><p>过完了安检走了一年走到了检票口，找了一年的位置好不容易坐下来，广播突然来一句很抱歉的通知您，xxxx航班起飞时间待定，然后八点多将近九点的飞机无了，等到大概九点半，收到条短信通知航班取消，连广播都没有，直接心态爆炸，然后去找工作人员问能不能包宿，之前说由于天气原因取消的不能包宿，后面了解到了情况说改签的航班只能改签这一趟所以才包的宿，就这样在刚装修的全是甲醛味的酒店里和陌生男子呆了一晚，吸了一晚上的二手烟，连续几天也没咋睡，每天三小时睡眠，后来才知道晚上十点多的江西航空照常发了，离谱，等了一晚上才给出了明天上午的补机方案，补到了上午10.10的飞机</p><p><img src="/images/post/20210714/1.jpg"></p><h2 id="7-13"><a href="#7-13" class="headerlink" title="7.13"></a>7.13</h2><p>酒店良心的提供了免费的自助早餐，品种比较少然后每种也没多少，随便吃了点就坐着机场大巴去机场了</p><p>到了机场一切正常，天气虽然阴天但还是挺亮的，还出了一下太阳，看来能飞</p><p>差不多九点半的时候，十点整发机的江西航空突然说延机到十一点整，然后围了一堆人在那里问，过了十分钟广播通知我们登机，刚好江西航空的登机口就在我们登机口旁边，然后顶着一堆人的目光在登机口排队，大家目的地都相同然后莫名延机了，我还以为天津航空终于不拉了，进飞机前还特地看了下天，发现很亮</p><p>找到位置坐下来后，还没五分钟，正要起飞的时候，天全阴了，直接变暗，随之而来的就是大暴雨，好的，硬是等到十一点才起飞了，到了南昌差不多一点</p><p><img src="/images/post/20210714/2.jpg"></p><p><img src="/images/post/20210714/3.jpg"></p><p>到了南昌后，找到机场大巴的位置，刚准备坐机场大巴，结果人满了，只能等20min的下一班，然后开始抢回家的高铁票，拿了各种第三方app，抢票系统是真的垃圾，而且大概是那种基本不开会员就抢不到的，他那个抢票也是在12306上抢，这还不如我自己抢，期间刷出来几张都抢不到，<u><strong>我一定要写一个抢票的脚本</strong></u></p><p>到了高铁站大概14.30，没票了也抢不到只能买16.00的票，第三方app的票一下就没了，最后还是在12306抢到了张，最后成功到家</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>天航包宿还算挺良心的，但不能阻止我黑他，这航班太玄学了</li><li>千万不要在第三方app上面抢票，还不如自己去12306买，<u><strong>我一定要写一个抢票的脚本</strong></u></li><li>千万不要在火车站买樱桃味的可口可乐</li></ol><p>总的来说这几天过的过于充实，一次终身难忘的经历，运气不好是真的啥事都碰得到</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>日志</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github静态博客搭建笔记</title>
    <link href="/2021/02/02/buildblog/"/>
    <url>/2021/02/02/buildblog/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>很久没更新博客了，以hexo搭建为开篇，让更多人拥有自己的独立博客</p>          </div><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客，在如今信息化的时代或许看起来有点可笑，人人都可以在各大社交平台快速地发布动态，短视频，更加方便地与朋友，同学一起互动点赞评论，但正是在如此信息化的时代，或许独立博客才是个人真正的归属</p><p>对于个人来讲，拥有自己的独立博客，像是拥有了一座自己的房子，可以在此平台下记录周围的一切，可以在此畅所欲言，可以遇到许多志同道合的朋友，研究一些新奇的玩意来充实博客</p><blockquote><p>能够坚持写博客的人都是有自我想法的人</p></blockquote><p>希望你能坚持看完这篇文章并坚持写下去</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Heox是一个静态博客程序，庞大的社区，开源支持，Node.js所带来的快速生成速度，对Markdown的支持等等，这些让许多想快速拥有自己的独立博客的人更加便利，只需要一个命令便可以成功部署到Github Page上</p><p><strong>Hexo是基于Node.js的静态博客框架，用Git进行博客的更新</strong></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>安装Hexo之前，先要安装Node.js和Git：</p><p><a href="https://nodejs.org/zh-cn/download/">Node.js</a></p><p><a href="https://git-scm.com/downloads">Git</a></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="全局安装Hexo"><a href="#全局安装Hexo" class="headerlink" title="全局安装Hexo"></a>全局安装Hexo</h3><p>打开Git终端：鼠标右键-&gt;git bash（前提要安装Git），输入以下代码安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></div></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>在想作为博客文件夹的位置打开Git终端（同上），输入：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo init hexo<br></code></pre></div></td></tr></table></figure><p>进入新创建的hexo文件夹，hexo在里面已完成初始化</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>在hexo目录下打开Git终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install<br></code></pre></div></td></tr></table></figure><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>现在你可以通过以下命令启动本地预览你的独立博客了</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo s<br></code></pre></div></td></tr></table></figure><p>打开浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a> 即可预览</p><h3 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean <span class="hljs-comment">#清除生成的博客静态文件</span><br>hexo g <span class="hljs-comment">#生成博客静态文件 即hexo generate</span><br>hexo s <span class="hljs-comment">#启动博客的本地预览 即hexo server</span><br>hexo d <span class="hljs-comment">#推送博客到远程仓库 即hexo deploy</span><br>hexo new page xxx <span class="hljs-comment">#新建名为“xxx”的页面</span><br>hexo new xxx <span class="hljs-comment">#新建名为“xxx”的文章</span><br>hexo d -g <span class="hljs-comment">#生成静态博客并推送到远程仓库</span><br>hexo s -g <span class="hljs-comment">#生成静态博客并启动本地预览</span><br></code></pre></div></td></tr></table></figure><p>现在你的博客已经安装完成了，接下来关联远程仓库</p><h2 id="关联Github仓库"><a href="#关联Github仓库" class="headerlink" title="关联Github仓库"></a>关联Github仓库</h2><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p><img src="/images/post/hexo_build/1.png"></p><ul><li>在右上角人物处点击Your repositories进入仓库</li></ul><p><img src="/images/post/hexo_build/2.png"></p><ul><li><p>点击New创建新仓库</p></li><li><p>Repository name为username.github.io，username为你的Github用户名</p></li><li><p>Description是仓库描述，可随便写</p></li><li><p>选择Public</p></li><li><p>勾选Add a README file</p></li><li><p>点击Create repository</p></li></ul><h3 id="链接Git和Github远程仓库"><a href="#链接Git和Github远程仓库" class="headerlink" title="链接Git和Github远程仓库"></a>链接Git和Github远程仓库</h3><p>打开Git终端，分别输入：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;username&quot;</span> <span class="hljs-comment">#username为你的Github用户名</span><br>git config --global user.mail <span class="hljs-string">&quot;your email address&quot;</span> <span class="hljs-comment">#your email addres为你的注册邮箱</span><br>ssh keygen -t rsa -C <span class="hljs-string">&quot;your email address&quot;</span> <span class="hljs-comment">#生成ssh公钥，和GitHub链接</span><br></code></pre></div></td></tr></table></figure><p>生成的公钥在C:\Users\用户名\ .ssh\目录下</p><ul><li><p>用记事本打开id_rsa.pub，复制里面所有内容</p></li><li><p>打开Github右上角人物Settings</p></li><li><p>选择SSH and GPG keys</p></li><li><p>点击New SSH key</p></li><li><p>Title随便填，Key填刚刚复制的内容</p></li><li><p>点击Add SSH key</p></li></ul><p>打开Git终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></div></td></tr></table></figure><p>若出现：Hi xxx！则说明本地的Git成功连接到了Github</p><p>打开hexo目录下的_config.yml文件，修改deploy如下：（忽略coding那一行，把lsilencej都改为你的Github用户名）</p><p><img src="/images/post/hexo_build/3.png"></p><h3 id="安装推送Git的插件"><a href="#安装推送Git的插件" class="headerlink" title="安装推送Git的插件"></a>安装推送Git的插件</h3><p>在hexo根目录下打开Git终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></div></td></tr></table></figure><h3 id="推送至远程仓库"><a href="#推送至远程仓库" class="headerlink" title="推送至远程仓库"></a>推送至远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean<br>hexo d -g<br></code></pre></div></td></tr></table></figure><p>在浏览器输入username.github.io就可以访问到你刚建的博客了（username为你的Github用户名）</p>]]></content>
    
    
    <categories>
      
      <category>干货</category>
      
      <category>博客</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Python学习笔记(语法)</title>
    <link href="/2020/08/15/python/"/>
    <url>/2020/08/15/python/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>在学习Python的路上渐行渐远</p>          </div><span id="more"></span><h2 id="我为什么选择Python？？？"><a href="#我为什么选择Python？？？" class="headerlink" title="我为什么选择Python？？？"></a>我为什么选择Python？？？</h2><p>Python？？？<br>为什么要学习Python？？？<br>C++它不香吗？？？<br><strong>是的，它确实不香了</strong>(笑<br>Java和Python在后台语言上各撑起了一片天<br>Java的使用时间更久，更成熟；Python则更年轻，更加的便捷，两者各有各的优势所在：</p><ul><li>Python：<ul><li>相比于Java来说，Python上手较快，开发效率高，可能实现同样的功能Java需要上百行代码，但Python只需要几十行便可以解决</li><li>代码量少，维护和更新起来也就相对容易，表达概念更加清楚</li><li>人工智能首选语言(爬虫可不是说说的)</li><li>Java重于编程，Python重于解决问题</li></ul></li><li>Java：<ul><li>安全稳定，发展较成熟，国内受众广</li><li>容易创建应用，有多种工具进行应用研发</li><li>发展方向较多</li></ul></li></ul><p>Java在近些年来的表现中规中矩，而Python则是迎上潮流，所以__我全都要__<del>(小孩子才做选择题)</del></p><h2 id="Python学习之路"><a href="#Python学习之路" class="headerlink" title="Python学习之路"></a>Python学习之路</h2><p>大致是按照&lt;&lt;Python编程从入门到实践&gt;&gt;进展，下列案例多数来自该书<br><img src="/images/post/python/python.jpg" alt="封面"></p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello, World!"></a>Hello, World!</h3><p>首先当然是编写一个Hello,World!了，据说在计算机界有这样的一个传说，当你刚接触一门编程语言时，你第一个程序编写Hello，World!会给你带来好运</p><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">message = <span class="hljs-string">&quot;Hello Python world!&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello Python world!&quot;</span>)<br><span class="hljs-built_in">print</span>(message)<br></code></pre></div></td></tr></table></figure><p>对你没有看错，变量就是这么简单使用，根本就不需要定义的，而且打印变量也不需要C++那么繁琐，最关键的是每行代码后面不需要添加’;’，这是多么好多么人性化的一门语言啊！！！  </p><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><h4 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">name = <span class="hljs-string">&quot;ada lovelace&quot;</span><br><span class="hljs-built_in">print</span>(name.title()) <span class="hljs-comment"># 首字母大写</span><br><span class="hljs-built_in">print</span>(name.upper()) <span class="hljs-comment"># 均大写</span><br><span class="hljs-built_in">print</span>(name.lower()) <span class="hljs-comment"># 均小写</span><br></code></pre></div></td></tr></table></figure><blockquote><p>踩坑警告！！！<br>若要输入中文需要加一行<br>‘# -<em>- coding : utf-8 -</em>- ‘ (单引号内)<br>否则会报错  </p></blockquote><h4 id="删除字符串前后空白"><a href="#删除字符串前后空白" class="headerlink" title="删除字符串前后空白"></a>删除字符串前后空白</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">favorite_language = <span class="hljs-string">&#x27;python &#x27;</span><br><span class="hljs-built_in">print</span>(favorite_language)<br><span class="hljs-built_in">print</span>(favorite_language.rstrip()) <span class="hljs-comment"># 末尾</span><br><span class="hljs-built_in">print</span>(favorite_language.lstrip()) <span class="hljs-comment"># 开头</span><br><span class="hljs-built_in">print</span>(favorite_language.strip()) <span class="hljs-comment"># 开头和末尾</span><br></code></pre></div></td></tr></table></figure><h4 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">age = <span class="hljs-number">18</span><br>message = <span class="hljs-string">&quot;Happy &quot;</span> + <span class="hljs-built_in">str</span>(age) + <span class="hljs-string">&quot;rd Birthday&quot;</span> <span class="hljs-comment"># str()用来转换数字与字符串格式，防止语法错误</span><br><span class="hljs-built_in">print</span>(message)<br></code></pre></div></td></tr></table></figure><h4 id="合并字符串"><a href="#合并字符串" class="headerlink" title="合并字符串"></a>合并字符串</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">first_name = <span class="hljs-string">&quot;Mike&quot;</span><br>last_name = <span class="hljs-string">&quot;lsilencej&quot;</span><br>full_name = first_name + <span class="hljs-string">&quot; &quot;</span> + last_name<br><span class="hljs-built_in">print</span>(full_name)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, &quot;</span> + full_name.title() + <span class="hljs-string">&quot;!&quot;</span>) <br>message = <span class="hljs-string">&quot;Hello, &quot;</span> + full_name.title() + <span class="hljs-string">&quot;!&quot;</span><br><span class="hljs-built_in">print</span>(message)<br></code></pre></div></td></tr></table></figure><h3 id="列表-即数组"><a href="#列表-即数组" class="headerlink" title="列表(即数组)"></a>列表(即数组)</h3><h4 id="访问列表元素"><a href="#访问列表元素" class="headerlink" title="访问列表元素"></a>访问列表元素</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">bicycles = [<span class="hljs-string">&#x27;trek&#x27;</span>, <span class="hljs-string">&#x27;cannondale&#x27;</span>, <span class="hljs-string">&#x27;redline&#x27;</span>, <span class="hljs-string">&#x27;specialized&#x27;</span>]<br><span class="hljs-built_in">print</span>(bicycles[<span class="hljs-number">0</span>].title())<br><span class="hljs-built_in">print</span>(bicycles[<span class="hljs-number">3</span>].title())<br><span class="hljs-built_in">print</span>(bicycles[-<span class="hljs-number">1</span>].title()) <span class="hljs-comment">#特殊</span><br></code></pre></div></td></tr></table></figure><p>这里有个索引为负数，代表着与最后一个元素的距离，索引为-1时输出最后一个元素</p><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">bicycles.append(<span class="hljs-string">&#x27;galaxy&#x27;</span>) <span class="hljs-comment"># 添加列表元素至末尾(相当于横过来的栈)</span><br><br>motorcycles = [] <span class="hljs-comment"># 空列表</span><br><br>motorcycles.insert(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;ducati&#x27;</span>) <span class="hljs-comment"># 在列表中插入元素，&#x27;0&#x27;代表索引</span><br><br><span class="hljs-keyword">del</span> motorcycles[<span class="hljs-number">0</span>] <span class="hljs-comment"># 删除元素，使用del则代表不可继续访问该删除元素</span><br><br>popped_motorcycle = motorcycles.pop()<br><span class="hljs-built_in">print</span>(motorcycles)<br><span class="hljs-built_in">print</span>(popped_motorcycle) <span class="hljs-comment"># 也可使用pop()来删除最右端即末尾的元素，可继续使用该元素，类比于栈;pop(0)括号内数字代表索引，不填则默认末尾</span><br><br>bicycles.remove(<span class="hljs-string">&#x27;galaxy&#x27;</span>) <span class="hljs-comment"># remove可直接删除元素，元素可继续使用(屁话)</span><br><br>cars.reverse() <span class="hljs-comment"># 倒着打印列表</span><br><span class="hljs-built_in">print</span>(cars)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(cars))<span class="hljs-comment"># 打印列表长度</span><br></code></pre></div></td></tr></table></figure><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ul><li>sort()<figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># sort()永久排序,即原列表改变</span><br>cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>]<br>cars.sort()<br><span class="hljs-built_in">print</span>(cars)<br>cars.sort(reverse = <span class="hljs-literal">True</span>) <span class="hljs-comment"># 按字典序相反排列，注：True一定要大写</span><br><span class="hljs-built_in">print</span>(cars)<br></code></pre></div></td></tr></table></figure></li><li>sorted()<figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># sorted()临时排序,原列表不改变</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(cars))<br><span class="hljs-built_in">print</span>(cars)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(cars, reverse = <span class="hljs-literal">True</span>)) <span class="hljs-comment"># 按字典序相反排列，注：True一定要大写</span><br><span class="hljs-built_in">print</span>(cars)<br></code></pre></div></td></tr></table></figure></li></ul><h4 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># for循环(代码是真的简单)</span><br>magicians = [<span class="hljs-string">&#x27;alice&#x27;</span>, <span class="hljs-string">&#x27;david&#x27;</span>, <span class="hljs-string">&#x27;carolina&#x27;</span>]<br><span class="hljs-keyword">for</span> magician <span class="hljs-keyword">in</span> magicians:<br><span class="hljs-built_in">print</span>(magician)<br><span class="hljs-built_in">print</span>(magician.title() + <span class="hljs-string">&quot;, that was a great trick!&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I can&#x27;t wait to see your next trick, &quot;</span> + magician.title())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Thank you, everyone. That was a great magic show!&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="创建数值列表-range-函数的使用"><a href="#创建数值列表-range-函数的使用" class="headerlink" title="创建数值列表(range()函数的使用)"></a>创建数值列表(range()函数的使用)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 直接打印数字，打一个换一行</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>): <span class="hljs-comment"># 不会打印数字5</span><br><span class="hljs-built_in">print</span>(value)<br><br><span class="hljs-comment"># 创建数字列表[1, 2, 3, 4, 5]</span><br>numbers = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">6</span>))<br><span class="hljs-built_in">print</span>(numbers)<br><br><span class="hljs-comment"># 指定步长,打印10以内的偶数</span><br>numbers = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">2</span>))<br><span class="hljs-built_in">print</span>(numbers)<br><br><span class="hljs-comment"># 打印11以内的平方数</span><br>squares = []<br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>):<br>squares.append(value ** <span class="hljs-number">2</span>) <span class="hljs-comment"># **表示乘方运算</span><br><span class="hljs-built_in">print</span>(squares)<br><br><span class="hljs-comment"># 最小值、最大值、总和</span><br>digits = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">min</span>(digits))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">max</span>(digits))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sum</span>(digits))<br><br><span class="hljs-comment"># 列表解析, 一行代码生成上述列表</span><br>squares = [value ** <span class="hljs-number">2</span> <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>)]<br><span class="hljs-built_in">print</span>(squares)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="切片-操作部分列表"><a href="#切片-操作部分列表" class="headerlink" title="切片(操作部分列表)"></a>切片(操作部分列表)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">players = [<span class="hljs-string">&#x27;charles&#x27;</span>, <span class="hljs-string">&#x27;martina&#x27;</span>, <span class="hljs-string">&#x27;michael&#x27;</span>, <span class="hljs-string">&#x27;florence&#x27;</span>, <span class="hljs-string">&#x27;eli&#x27;</span>]<br><span class="hljs-built_in">print</span>(players[<span class="hljs-number">0</span> : <span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(players[: <span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(players[<span class="hljs-number">1</span> : <span class="hljs-number">4</span>])<br><span class="hljs-built_in">print</span>(players[<span class="hljs-number">2</span> :])<br><span class="hljs-built_in">print</span>(players[-<span class="hljs-number">3</span> :]) <span class="hljs-comment"># 负索引表示返回末尾相应距离的元素</span><br><br><span class="hljs-comment"># 遍历切片</span><br><span class="hljs-keyword">for</span> player <span class="hljs-keyword">in</span> players[: <span class="hljs-number">3</span>]:<br><span class="hljs-built_in">print</span>(player)<br><br><span class="hljs-comment"># 复制列表</span><br>my_players = players[:] <span class="hljs-comment"># 非切片不能用&quot;=&quot;,&quot;=&quot;意味着两个列表指向同一列表，非复制</span><br><span class="hljs-built_in">print</span>(players)<br><span class="hljs-built_in">print</span>(my_players)<br></code></pre></div></td></tr></table></figure><h4 id="元祖-不可变的值的列表"><a href="#元祖-不可变的值的列表" class="headerlink" title="元祖(不可变的值的列表)"></a>元祖(不可变的值的列表)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">dimensions = (<span class="hljs-number">200</span>, <span class="hljs-number">50</span>) <span class="hljs-comment"># 元祖用()不用[],且值不可修改</span><br><span class="hljs-built_in">print</span>(dimensions[<span class="hljs-number">0</span>])<br><span class="hljs-built_in">print</span>(dimensions[<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># 遍历元祖中所有值</span><br><span class="hljs-keyword">for</span> dimension <span class="hljs-keyword">in</span> dimensions:<br><span class="hljs-built_in">print</span>(dimension)<br><br><span class="hljs-comment"># 修改元祖变量(重新定义元祖)</span><br><span class="hljs-keyword">for</span> dimension <span class="hljs-keyword">in</span> dimensions:<br><span class="hljs-built_in">print</span>(dimension)<br>dimensions = (<span class="hljs-number">400</span>, <span class="hljs-number">200</span>)<br><span class="hljs-keyword">for</span> dimension <span class="hljs-keyword">in</span> dimensions:<br><span class="hljs-built_in">print</span>(dimension)<br></code></pre></div></td></tr></table></figure><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><p>Python中的逻辑用的是 and or 和 not<br>检查元素是否位于列表中可直接用 in (这是我见过最方便的！！！)</p><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#检查特定值是否在列表中</span><br>requested_toppings = [<span class="hljs-string">&#x27;mushrooms&#x27;</span>, <span class="hljs-string">&#x27;onions&#x27;</span>, <span class="hljs-string">&#x27;pineapple&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;mushrooms&#x27;</span> <span class="hljs-keyword">in</span> requested_toppings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;pepperoni&#x27;</span> <span class="hljs-keyword">in</span> requested_toppings)<br><br><span class="hljs-comment">#检查特定值是否不在列表中</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;pepperoni&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> requested_toppings)<br></code></pre></div></td></tr></table></figure><h4 id="if条件"><a href="#if条件" class="headerlink" title="if条件"></a>if条件</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 多个if条件</span><br>age = <span class="hljs-number">12</span><br><span class="hljs-keyword">if</span> age &lt; <span class="hljs-number">4</span>: <span class="hljs-comment"># 注意冒号</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your admission cost is $0.&quot;</span>)<br><span class="hljs-keyword">elif</span> age &lt; <span class="hljs-number">18</span>: <span class="hljs-comment"># 注意冒号</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your admission cost is $5.&quot;</span>)<br><span class="hljs-keyword">else</span>: <span class="hljs-comment"># 注意冒号</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your admission cost is $10.&quot;</span>)<br><br><span class="hljs-comment"># 确定列表非空</span><br>requested_toppings = []<br><span class="hljs-keyword">if</span> requested_toppings:<br><span class="hljs-keyword">for</span> requested_topping <span class="hljs-keyword">in</span> requested_toppings:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Adding &quot;</span> + requested_topping + <span class="hljs-string">&quot;.&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nFinished making your pizza&quot;</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Are you sure you want a plain pizza?&quot;</span>) <span class="hljs-comment"># 为空执行else</span><br></code></pre></div></td></tr></table></figure><h3 id="字典-即结构体"><a href="#字典-即结构体" class="headerlink" title="字典(即结构体)"></a>字典(即结构体)</h3><h4 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">alien_0 = &#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;green&#x27;</span>, <span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">5</span>&#125;<br><span class="hljs-built_in">print</span>(alien_0[<span class="hljs-string">&#x27;color&#x27;</span>])<br><span class="hljs-built_in">print</span>(alien_0[<span class="hljs-string">&#x27;points&#x27;</span>]) <span class="hljs-comment"># 打印值</span><br><br><span class="hljs-comment"># 添加键-值对</span><br><span class="hljs-built_in">print</span>(alien_0)<br>alien_0[<span class="hljs-string">&#x27;x_position&#x27;</span>] = <span class="hljs-number">0</span><br>alien_0[<span class="hljs-string">&#x27;y_position&#x27;</span>] = <span class="hljs-number">25</span><br><span class="hljs-built_in">print</span>(alien_0)<br><br><span class="hljs-comment">#修改字典中的值</span><br>alien_0[<span class="hljs-string">&#x27;color&#x27;</span>] = <span class="hljs-string">&#x27;yellow&#x27;</span><br><span class="hljs-built_in">print</span>(alien_0)<br><br><span class="hljs-comment"># 删除键-值对</span><br><span class="hljs-built_in">print</span>(alien_0)<br><span class="hljs-keyword">del</span> alien_0[<span class="hljs-string">&#x27;speed&#x27;</span>]<br><span class="hljs-built_in">print</span>(alien_0)<br><br><span class="hljs-comment">#剔除重复项</span><br><span class="hljs-keyword">for</span> language <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span>(favorite_languages.values()): <br><span class="hljs-built_in">print</span>(language.title())<br></code></pre></div></td></tr></table></figure><h4 id="由类似对象组成的字典-同类型多元素"><a href="#由类似对象组成的字典-同类型多元素" class="headerlink" title="由类似对象组成的字典(同类型多元素)"></a>由类似对象组成的字典(同类型多元素)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">favorite_languages = &#123;<br><span class="hljs-string">&#x27;jen&#x27;</span>: <span class="hljs-string">&#x27;python&#x27;</span>, <br><span class="hljs-string">&#x27;sarah&#x27;</span>: <span class="hljs-string">&#x27;c&#x27;</span>, <br><span class="hljs-string">&#x27;edward&#x27;</span>: <span class="hljs-string">&#x27;ruby&#x27;</span>, <br><span class="hljs-string">&#x27;phil&#x27;</span>: <span class="hljs-string">&#x27;python&#x27;</span>, <br>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Sarah&#x27;s favorite language is &quot;</span> + favorite_languages[<span class="hljs-string">&#x27;sarah&#x27;</span>].title() + <span class="hljs-string">&quot;.&quot;</span>)<br><br><span class="hljs-comment"># 不同个体同一类型元素包含多个时</span><br>favorite_languages = &#123;<br><span class="hljs-string">&#x27;jen&#x27;</span>: [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;ruby&#x27;</span>], <br><span class="hljs-string">&#x27;sarah&#x27;</span>: [<span class="hljs-string">&#x27;c&#x27;</span>], <br><span class="hljs-string">&#x27;edward&#x27;</span>: [<span class="hljs-string">&#x27;ruby&#x27;</span>, <span class="hljs-string">&#x27;go&#x27;</span>], <br><span class="hljs-string">&#x27;phil&#x27;</span>: [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;haskell&#x27;</span>], <br>&#125;<br><span class="hljs-keyword">for</span> name, languages <span class="hljs-keyword">in</span> favorite_languages.items(): <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span> + name.title() + <span class="hljs-string">&quot;&#x27;s favorite languages are: &quot;</span>)<br><span class="hljs-keyword">for</span> language <span class="hljs-keyword">in</span> languages: <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\t&quot;</span> + language.title())<br></code></pre></div></td></tr></table></figure><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 遍历所有的键-值对</span><br>user_0 = &#123;<br><span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;efermi&#x27;</span>, <br><span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;enrico&#x27;</span>, <br><span class="hljs-string">&#x27;last&#x27;</span>: <span class="hljs-string">&#x27;fermi&#x27;</span>, <br>&#125;<br><span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> user_0.items(): <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nKey: &quot;</span> + key)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Value: &quot;</span> + value)<br><br><span class="hljs-comment"># 遍历所有键</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> favorite_languages.keys(): <br><span class="hljs-built_in">print</span>(name.title())<br><br><span class="hljs-comment">#遍历指定人的键-值对</span><br>friends = [<span class="hljs-string">&#x27;phil&#x27;</span>, <span class="hljs-string">&#x27;sarah&#x27;</span>]<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> favorite_languages.keys(): <br><span class="hljs-built_in">print</span>(name.title())<br><span class="hljs-keyword">if</span> name <span class="hljs-keyword">in</span> friends: <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hi &quot;</span> + name.title() + <span class="hljs-string">&quot;, I see your favorite language is &quot;</span> + favorite_languages[name].title() + <span class="hljs-string">&quot;!&quot;</span>)<br><br><span class="hljs-comment"># 按顺序遍历字典中的所有键</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(favorite_languages.keys()): <br><span class="hljs-built_in">print</span>(name.title() + <span class="hljs-string">&quot;, thank you for taking the poll.&quot;</span>)<br><br><span class="hljs-comment"># 遍历所有值</span><br><span class="hljs-keyword">for</span> language <span class="hljs-keyword">in</span> favorite_languages.values():<br><span class="hljs-built_in">print</span>(language.title())<br></code></pre></div></td></tr></table></figure><h4 id="字典列表-结构体数组"><a href="#字典列表-结构体数组" class="headerlink" title="字典列表(结构体数组)"></a>字典列表(结构体数组)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">alien_0 = &#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;green&#x27;</span>, <span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">5</span>&#125;<br>alien_1 = &#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;yellow&#x27;</span>, <span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">10</span>&#125;<br>alien_2 = &#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>, <span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">15</span>&#125;<br>aliens = [alien_0, alien_1, alien_2]<br><span class="hljs-keyword">for</span> alien <span class="hljs-keyword">in</span> aliens: <br><span class="hljs-built_in">print</span>(alien)<br><br><span class="hljs-comment"># 创建多个相同的结构体放入数组中</span><br>aliens = []<br><span class="hljs-keyword">for</span> alien_number <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>): <br>new_alien = &#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;green&#x27;</span>, <span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">5</span>, <span class="hljs-string">&#x27;speed&#x27;</span>: <span class="hljs-string">&#x27;slow&#x27;</span>&#125;<br>aliens.append(new_alien)<br><span class="hljs-keyword">for</span> alien <span class="hljs-keyword">in</span> aliens[: <span class="hljs-number">5</span>]: <br><span class="hljs-built_in">print</span>(alien)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;...&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Total number of aliens: &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(aliens)))<br><br><span class="hljs-comment"># 循环修改</span><br><span class="hljs-keyword">for</span> alien <span class="hljs-keyword">in</span> aliens[: <span class="hljs-number">3</span>]: <br><span class="hljs-keyword">if</span> alien[<span class="hljs-string">&#x27;color&#x27;</span>] == <span class="hljs-string">&#x27;green&#x27;</span>: <br>alien[<span class="hljs-string">&#x27;color&#x27;</span>] = <span class="hljs-string">&#x27;yellow&#x27;</span><br>alien[<span class="hljs-string">&#x27;speed&#x27;</span>] = <span class="hljs-string">&#x27;medium&#x27;</span><br>alien[<span class="hljs-string">&#x27;points&#x27;</span>] = <span class="hljs-number">10</span><br><span class="hljs-keyword">for</span> alien <span class="hljs-keyword">in</span> aliens[: <span class="hljs-number">5</span>]: <br><span class="hljs-built_in">print</span>(alien)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;...&quot;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="字典存列表-数组结构体"><a href="#字典存列表-数组结构体" class="headerlink" title="字典存列表(数组结构体)"></a>字典存列表(数组结构体)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">pizza = &#123;<br><span class="hljs-string">&#x27;crust&#x27;</span>: <span class="hljs-string">&#x27;thick&#x27;</span>, <br><span class="hljs-string">&#x27;toppings&#x27;</span>: [<span class="hljs-string">&#x27;mushrooms&#x27;</span>, <span class="hljs-string">&#x27;extra cheese&#x27;</span>], <br>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;You ordered a &quot;</span> + pizza[<span class="hljs-string">&#x27;crust&#x27;</span>] + <span class="hljs-string">&quot;-crust pizza &quot;</span> + <span class="hljs-string">&quot;with the following toppings: &quot;</span>)<br><span class="hljs-keyword">for</span> topping <span class="hljs-keyword">in</span> pizza[<span class="hljs-string">&#x27;toppings&#x27;</span>]: <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\t&quot;</span> + topping)<br></code></pre></div></td></tr></table></figure><h4 id="字典存字典-禁止套娃！！！"><a href="#字典存字典-禁止套娃！！！" class="headerlink" title="字典存字典(禁止套娃！！！)"></a>字典存字典(禁止套娃！！！)</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">users = &#123;<br><span class="hljs-string">&#x27;aeinstein&#x27;</span>: &#123;<br><span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;albert&#x27;</span>, <br><span class="hljs-string">&#x27;last&#x27;</span>: <span class="hljs-string">&#x27;einstein&#x27;</span>, <br><span class="hljs-string">&#x27;location&#x27;</span>: <span class="hljs-string">&#x27;princeton&#x27;</span>, <br>&#125;, <br><span class="hljs-string">&#x27;mcurie&#x27;</span>: &#123;<br><span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;marie&#x27;</span>, <br><span class="hljs-string">&#x27;last&#x27;</span>: <span class="hljs-string">&#x27;curie&#x27;</span>, <br><span class="hljs-string">&#x27;location&#x27;</span>: <span class="hljs-string">&#x27;paris&#x27;</span>, <br>&#125;, <br>&#125;<br><span class="hljs-keyword">for</span> username, user_info <span class="hljs-keyword">in</span> users.items(): <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nUsername: &quot;</span> + username)<br>full_name = user_info[<span class="hljs-string">&#x27;first&#x27;</span>] + <span class="hljs-string">&quot; &quot;</span> + user_info[<span class="hljs-string">&#x27;last&#x27;</span>]<br>location = user_info[<span class="hljs-string">&#x27;location&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\tFull name: &quot;</span> + full_name.title())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\tlocation: &quot;</span> + location.title())<br></code></pre></div></td></tr></table></figure><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py">name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Tell me your name: &quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, &quot;</span> + name + <span class="hljs-string">&quot;!&quot;</span>)<br><br><span class="hljs-comment"># 储存变量并传递</span><br>prompt = <span class="hljs-string">&quot;If you tell us who you are, we can personalize the message you see.&quot;</span><br>prompt += <span class="hljs-string">&quot;\nWhat is your first name? &quot;</span> <span class="hljs-comment"># 精髓 += </span><br>name = <span class="hljs-built_in">input</span>(prompt)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, &quot;</span> + name + <span class="hljs-string">&quot;!&quot;</span>)<br><br><span class="hljs-comment"># 获取数值输入</span><br>height = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;How tall are you, in inches? &quot;</span>)<br>height = <span class="hljs-built_in">int</span>(height)<br><span class="hljs-keyword">if</span> height &gt;= <span class="hljs-number">36</span>: <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nYou&#x27;re tall enough to ride! &quot;</span>)<br><span class="hljs-keyword">else</span>: <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nYou&#x27;ll be able to ride when you&#x27;re a little older.&quot;</span>)<br><br><span class="hljs-comment"># 使用用户输入来填充字典</span><br>responses = &#123;&#125;<br>polling_active = <span class="hljs-literal">True</span><br><span class="hljs-keyword">while</span> polling_active: <br>name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;\nWhat is your name? &quot;</span>)<br>response = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Which mountain would you like to climb someday? &quot;</span>)<br>responses[name] = response<br>repeat = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Would you like to let another person respond? (yes/no) &quot;</span>)<br><span class="hljs-keyword">if</span> repeat == <span class="hljs-string">&#x27;no&#x27;</span>: <br>polling_active = <span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n--- Poll Results ---&quot;</span>)<br><span class="hljs-keyword">for</span> name, response <span class="hljs-keyword">in</span> responses.items(): <br><span class="hljs-built_in">print</span>(name + <span class="hljs-string">&quot; would like to climb &quot;</span> + response + <span class="hljs-string">&quot;.&quot;</span>)<br></code></pre></div></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 问候语</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">greet_user</span>(<span class="hljs-params">username</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, &quot;</span> + username.title() + <span class="hljs-string">&quot;! &quot;</span>)<br>greet_user(<span class="hljs-string">&#x27;lsilencej&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h4><ul><li>位置实参(顺序)<figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">describe_pet</span>(<span class="hljs-params">animal_type, pet_name</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nI have a &quot;</span> + animal_type + <span class="hljs-string">&quot; whose name is &quot;</span> + pet_name.title() + <span class="hljs-string">&quot;.&quot;</span>)<br>describe_pet(<span class="hljs-string">&#x27;hamster&#x27;</span>, <span class="hljs-string">&#x27;harry&#x27;</span>)<br>describe_pet(<span class="hljs-string">&#x27;dog&#x27;</span>, <span class="hljs-string">&#x27;wille&#x27;</span>) <span class="hljs-comment"># 多次调用</span><br></code></pre></div></td></tr></table></figure></li><li>关键字实参(无序)<figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">describe_pet</span>(<span class="hljs-params">animal_type, pet_name</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nI have a &quot;</span> + animal_type + <span class="hljs-string">&quot; whose name is &quot;</span> + pet_name.title() + <span class="hljs-string">&quot;.&quot;</span>)<br>describe_pet(animal_type = <span class="hljs-string">&#x27;hamster&#x27;</span>, pet_name = <span class="hljs-string">&#x27;harry&#x27;</span>)<br>describe_pet(pet_name = <span class="hljs-string">&#x27;dog&#x27;</span>, animal_type =  <span class="hljs-string">&#x27;wille&#x27;</span>) <span class="hljs-comment"># 多次调用</span><br></code></pre></div></td></tr></table></figure></li></ul><h4 id="传递与返回"><a href="#传递与返回" class="headerlink" title="传递与返回"></a>传递与返回</h4><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 返回值</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_formatted_name</span>(<span class="hljs-params">first_name, last_name</span>):</span><br>full_name = first_name +  <span class="hljs-string">&#x27; &#x27;</span> + last_name<br><span class="hljs-keyword">return</span> full_name.title()<br>musician = get_formatted_name(<span class="hljs-string">&#x27;jimi&#x27;</span>, <span class="hljs-string">&#x27;hendrix&#x27;</span>)<br><span class="hljs-built_in">print</span>(musician)<br><br><span class="hljs-comment"># 返回字典</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_person</span>(<span class="hljs-params">first_name, last_name</span>):</span> <br>person = &#123;<span class="hljs-string">&#x27;first&#x27;</span>: first_name, <span class="hljs-string">&#x27;last&#x27;</span>: last_name&#125;<br><span class="hljs-keyword">return</span> person<br>musician = build_person(<span class="hljs-string">&#x27;jimi&#x27;</span>, <span class="hljs-string">&#x27;hendrix&#x27;</span>)<br><span class="hljs-built_in">print</span>(musician)<br><br><span class="hljs-comment"># 传递列表</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">greet_user</span>(<span class="hljs-params">names</span>):</span> <br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> names: <br>msg = <span class="hljs-string">&quot;Hello, &quot;</span> + name.title() + <span class="hljs-string">&quot;!&quot;</span><br><span class="hljs-built_in">print</span>(msg)<br>usernames = [<span class="hljs-string">&#x27;hannah&#x27;</span>, <span class="hljs-string">&#x27;ty&#x27;</span>, <span class="hljs-string">&#x27;margot&#x27;</span>]<br>greet_user(usernames)<br><br><span class="hljs-comment"># 函数中修改列表</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_models</span>(<span class="hljs-params">unprinted_designs, completed_models</span>):</span> <br><span class="hljs-keyword">while</span> unprinted_designs: <br>current_design = unprinted_designs.pop()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Printing model: &quot;</span> + current_design)<br>completed_models.append(current_design)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_completed_models</span>(<span class="hljs-params">completed_models</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nThe following models have been printed: &quot;</span>)<br><span class="hljs-keyword">for</span> completed_model <span class="hljs-keyword">in</span> completed_models: <br><span class="hljs-built_in">print</span>(completed_model)<br>unprinted_designs = [<span class="hljs-string">&#x27;iphone case&#x27;</span>, <span class="hljs-string">&#x27;robot pendant&#x27;</span>, <span class="hljs-string">&#x27;dodecahedron&#x27;</span>]<br>completed_models = []<br>print_models(unprinted_designs, completed_models)<br>show_completed_models(completed_models)<br><br><span class="hljs-comment"># 传递任意数量的形参</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">make_pizza</span>(<span class="hljs-params">*toppings</span>):</span> <br><span class="hljs-built_in">print</span>(toppings)<br>make_pizza(<span class="hljs-string">&#x27;pepperoni&#x27;</span>)<br>make_pizza(<span class="hljs-string">&#x27;mushrooms&#x27;</span>, <span class="hljs-string">&#x27;green peppers&#x27;</span>, <span class="hljs-string">&#x27;extra cheese&#x27;</span>)<br><br><span class="hljs-comment"># 使用任意数量的关键字形参</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_profile</span>(<span class="hljs-params">first, last, **user_info</span>):</span> <br>profile = &#123;&#125;<br>profile[<span class="hljs-string">&#x27;first_name&#x27;</span>] = first<br>profile[<span class="hljs-string">&#x27;last_ name&#x27;</span>] = last<br><span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> user_info.items(): <br>profile[key] = value<br><span class="hljs-keyword">return</span> profile<br>user_profile = build_profile(<span class="hljs-string">&#x27;albert&#x27;</span>, <span class="hljs-string">&#x27;einstein&#x27;</span>, location = <span class="hljs-string">&#x27;princeton&#x27;</span>, field = <span class="hljs-string">&#x27;physics&#x27;</span>)<br><span class="hljs-built_in">print</span>(user_profile)<br></code></pre></div></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>可以玩各种各样的操作，构建出一个个不存在的实体</p><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># Dog</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span>():</span> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name, age</span>):</span> <span class="hljs-comment"># init前后各有两个_即__</span><br>self.name = name<br>self.age = age<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sit</span>(<span class="hljs-params">self</span>):</span> <br><span class="hljs-built_in">print</span>(self.name.title() + <span class="hljs-string">&quot; is now sitting&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">roll_over</span>(<span class="hljs-params">self</span>):</span> <br><span class="hljs-built_in">print</span>(self.name.title() + <span class="hljs-string">&quot; rolled over&quot;</span>)<br>my_dog = Dog(<span class="hljs-string">&#x27;willie&#x27;</span>, <span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;My dog&#x27;s name is &quot;</span> + my_dog.name.title() + <span class="hljs-string">&quot;.&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;My dog is &quot;</span> + <span class="hljs-built_in">str</span>(my_dog.age) + <span class="hljs-string">&quot; year old.&quot;</span>)<br>my_dog.sit()<br>my_dog.roll_over()<br>your_dog = Dog(<span class="hljs-string">&#x27;lucy&#x27;</span>, <span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nYour dog&#x27;s name is &quot;</span> + your_dog.name.title() + <span class="hljs-string">&quot;.&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your dog is &quot;</span> + <span class="hljs-built_in">str</span>(your_dog.age) + <span class="hljs-string">&quot; year old.&quot;</span>)<br>your_dog.sit()<br>your_dog.roll_over()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-comment"># Car</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Car</span>():</span> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, make, model, year</span>):</span> <br>self.make = make<br>self.model = model<br>self.year = year<br>self.odometer_reading = <span class="hljs-number">0</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_descriptive_name</span>(<span class="hljs-params">self</span>):</span> <br>long_name = <span class="hljs-built_in">str</span>(self.year) + <span class="hljs-string">&#x27; &#x27;</span> + self.make + <span class="hljs-string">&#x27; &#x27;</span> + self.model<br><span class="hljs-keyword">return</span> long_name.title()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read_odometer</span>(<span class="hljs-params">self</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This car has &quot;</span> + <span class="hljs-built_in">str</span>(self.odometer_reading) + <span class="hljs-string">&quot; miles on it.&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update_odometer</span>(<span class="hljs-params">self, mileage</span>):</span> <br>self.odometer_reading = mileage<br>my_new_car = Car(<span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;a4&#x27;</span>, <span class="hljs-string">&#x27;2016&#x27;</span>)<br><span class="hljs-built_in">print</span>(my_new_car.get_descriptive_name())<br>my_new_car.read_odometer()<br>my_new_car.update_odometer(<span class="hljs-number">23</span>) <span class="hljs-comment"># 也可直接修改: my_new_car.odometer_reading = 23</span><br>my_new_car.read_odometer()<br><br><span class="hljs-comment"># Battery(用作属性)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Battery</span>():</span> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, battery_size = <span class="hljs-number">70</span></span>):</span> <br>self.battery_size = battery_size<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">describe_battery</span>(<span class="hljs-params">self</span>):</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This car has a &quot;</span> + <span class="hljs-built_in">str</span>(self.battery_size) + <span class="hljs-string">&quot;-kWh battery.&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_range</span>(<span class="hljs-params">self</span>):</span> <br><span class="hljs-keyword">if</span> self.battery_size == <span class="hljs-number">70</span>: <br><span class="hljs-built_in">range</span> = <span class="hljs-number">240</span><br><span class="hljs-keyword">elif</span> self.battery_size == <span class="hljs-number">60</span>: <br><span class="hljs-built_in">range</span> = <span class="hljs-number">270</span><br>msg = <span class="hljs-string">&quot;This car can go approximately &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">range</span>)<br>msg += <span class="hljs-string">&quot; miles on a full charge&quot;</span><br><span class="hljs-built_in">print</span>(msg)<br><br><span class="hljs-comment"># ElectricCar(继承)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ElectricCar</span>(<span class="hljs-params">Car</span>):</span> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, make, model, year</span>):</span> <span class="hljs-comment"># 初始化父类属性</span><br><span class="hljs-built_in">super</span>().__init__(make, model, year) <span class="hljs-comment"># 初始化</span><br>self.battery = Battery()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update_odometer</span>(<span class="hljs-params">self, mileage</span>):</span> <span class="hljs-comment"># 重写父类的方法</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Error!&quot;</span>)<br>my_tesla = ElectricCar(<span class="hljs-string">&#x27;tesla&#x27;</span>, <span class="hljs-string">&#x27;model s&#x27;</span>, <span class="hljs-string">&#x27;2016&#x27;</span>)<br><span class="hljs-built_in">print</span>(my_tesla.get_descriptive_name())<br>my_tesla.battery.describe_battery()<br>my_tesla.update_odometer(<span class="hljs-number">13</span>)<br>my_tesla.battery.get_range()<br></code></pre></div></td></tr></table></figure><blockquote><p>最后献上Python之禅：<br>The Zen of Python, by Tim Peters</p></blockquote><blockquote><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one– and preferably only one –obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea – let’s do more of those!  </p></blockquote><p>你可以在Python编译器中输入以下内容看见它：</p><figure class="highlight py"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs py"><span class="hljs-keyword">import</span> this<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>远方</title>
    <link href="/2020/08/13/yuanfang/"/>
    <url>/2020/08/13/yuanfang/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>作为翻新博客后的第一篇文章，决定以一个名为“远方”的游戏为开头  </p>          </div><span id="more"></span><h2 id="远方"><a href="#远方" class="headerlink" title="远方"></a>远方</h2><p>第一眼看到进入游戏，就只有两个字来形容：<strong>惊艳</strong><br>画面惊艳，音乐惊艳，剧情惊艳<br>变幻的色彩，令人静心的音乐，跌宕的剧情使得这个玩法单一的游戏变得不那么单调</p><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=450 src="//music.163.com/outchain/player?type=1&id=35587592&auto=0&height=430"></iframe></center><h3 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h3><p>第一篇章的空旷，迷茫，音乐的低沉恰对上男孩女孩的相识相爱以及分别<br>第二篇章的音乐的激进与剧情中战争的激烈相互映衬<br>第三篇章则存在着一丝悲凉，战争的残酷使得两人分别，战争结束却早已物是人非，开放性的结局也让人拥有无尽的遐想<br>隐藏篇章则主要交代了故事中其他人的一则剧情，算个彩蛋吧</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>故事精彩细腻，多镜头人物心理描写将人物形象刻画的淋漓尽致<br>游戏从开头的背景音乐开始便在传达给人一种”孤独感”，让孤独之人新生共鸣，这应该也是另一个名字Loner的由来吧<br>但传达的还不仅仅是孤独，更多的是玩家对于整个故事的思考<br>隆尼对爱的执着，政府与个人所谓的”人道主义”，战争起因的可笑，战争的残酷以及隆尼的心意等等…<br>这些都通过一则则记录表现出来，在当今浮躁的社会中传达着一种生活的本意，即善的本意，让人真正的与平静结合，与善结合</p><center><font size = 35><font color = #FFD700>"金色的梦，我爱的你"</font></font></center>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>游戏</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【NOIP2018】游记</title>
    <link href="/2018/11/11/noip2018/"/>
    <url>/2018/11/11/noip2018/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p><del>一年OI一场空，五道dp见祖宗</del></p>          </div><span id="more"></span><h3 id="Day-INF"><a href="#Day-INF" class="headerlink" title="Day -INF"></a><strong>Day -INF</strong></h3><h6 id="学习数据结构"><a href="#学习数据结构" class="headerlink" title="学习数据结构"></a><strong>学习数据结构</strong></h6><p>离散化什么鬼 <del>(这不是离散数学里的吗???)</del></p><p>树上差分是啥???</p><p>线段树orzorz</p><p>别人学习而我在打暴力，真棒</p><p>赞扬一下南大的伙食…</p><h3 id="Day-INF-1"><a href="#Day-INF-1" class="headerlink" title="Day -INF + 1"></a><strong>Day -INF + 1</strong></h3><h6 id="学习图论"><a href="#学习图论" class="headerlink" title="学习图论"></a><strong>学习图论</strong></h6><p>匈牙利算法???<br>算是今天唯一听懂了…AC了一道模板题<a href="https://www.luogu.org/problemnew/show/P1894">[USACO4.2]完美的牛栏The Perfect Stall</a></p><p>接下来处于懵逼状态</p><p>Tarjan求强连通分量???<br>这是什么…好像有点熟…<br>对着模板硬是把dfn打成dnf…怕是没救了<br>缩点是啥…我怎么什么都没听懂???<br>好的，暴力</p><p>LCA orzorz<br>理解了理解了<br>开始做题:<a href="https://www.luogu.org/problemnew/show/P2680">运输计划</a><br>紫题…好的，下一个</p><p>再见我的懵逼的一天</p><h3 id="Day-INF-2"><a href="#Day-INF-2" class="headerlink" title="Day -INF + 2"></a><strong>Day -INF + 2</strong></h3><h6 id="学习数论"><a href="#学习数论" class="headerlink" title="学习数论"></a><strong>学习数论</strong></h6><p>唯一分解定理，好的，了解了</p><p>欧拉函数，好的，了解了， 又是背模板的一天…<br>按模板AC了一题:<a href="https://www.luogu.org/problemnew/show/P2158">[SDOI2008]仪仗队</a></p><p>筛法:  埃氏筛，欧拉筛…好的，但我选择Miller_Rabin算法(玄学结论: 大于5的素数一定在6的倍数附近)</p><p>欧几里得算法(gcd): 数论只会gcd</p><p>扩展欧几里得算法(exgcd): 花了一个晚上推公式…</p><p>乘法逆元: 什么鬼…这不就是变相的扩欧吗…来来来，一道乘法逆元模板题: <a href="https://www.luogu.org/problemnew/show/P3811">【模板】乘法逆元</a><br>什么???exgcd只能A8个点???被迫学习线性递推乘法逆元…继续推…</p><p>费马小定理: 快速幂…好像学过吧…</p><p>中国剩余定理(CRT) 好的背模板</p><p>秦九韶算法: 这不是提取公因式吗…</p><p>排列组合: 全程懵逼状态…还是去数学书上好好看看吧…</p><p>二项式定理和杨辉三角: 好的知道了，还是排列组合啊…</p><p>再见又一天</p><h3 id="Day-INF-3"><a href="#Day-INF-3" class="headerlink" title="Day -INF + 3"></a><strong>Day -INF + 3</strong></h3><h6 id="认识并理解学习玄学动态规划-dp"><a href="#认识并理解学习玄学动态规划-dp" class="headerlink" title="认识并理解学习玄学动态规划(dp)"></a><strong>认识<del>并理解学习</del>玄学动态规划(dp)</strong></h6><p>没什么好说的，全天懵逼…智商不够没办法…</p><h3 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a><strong>Day 0</strong></h3><p>从南大老校区搬去了新校区…豪华宾馆，就是离考场和食堂有点远，坐了半小时的车</p><p>下午集体听玄学讲座，敲重点，==复赛一般不会出原题，一般不会有同类型的题目出现 — By 白似雪==</p><p>晚上疯狂RP++， RANK–</p><p>还有好运来单曲循环直到深夜12点…</p><p>话说宾馆厕所里的灯坏了一个，只剩两个灯，其中一个灯还在洗澡的时候疯狂闪烁…以为有鬼…</p><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a><strong>Day 1</strong></h3><p>晚上失眠1点才睡，早上6点40又起床…困成狗…<del>怕不是今天要崩</del><br>早上起来这不要来一首好运来</p><p>进考场</p><p>T盘什么鬼…不是说有zip文件吗…还有提交可执行文件又是什么鬼…一脸懵逼</p><p>T1…这是啥…这不是线段树吗…为什么会放在第一题…没思路，骗分</p><p>T2..这又是啥…咦，好像扩欧…ax + by = c…手推exgcd…这好像又不是exgcd…疯狂打暴力…</p><p>T3…算了算了</p><p>好的，D1几近爆零…后来才知道三道都是原题…第一题还是13年真题(换了个题面…拿13年的12行题解交能过???我还疯狂忘线段树方面想…有毒吧)， 后面两道还是POJ的原题， 听说不会出原题…刚好碰上了2018， 看某谷讨论区才知道后两道是dp <del>(不是说不会出同类型题吗???)</del>, 2018真是毒瘤的一年…每年的都刷了，只有13年…感觉多的是大佬刷过这三题会把全国分数线给拉上去…算了算了，技不如人，甘拜下风，明日再战…</p><p><del>一年OI一场空，3道原题见祖宗</del></p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a><strong>Day 2</strong></h3><p>昨天心态有点崩，也没背模板，今天直接上考场，早上随便吃了点东西 <del>(轮到我去餐厅的时候什么都没了…)</del></p><p>进考场</p><p>一如既往的T盘</p><p>T1…图…吓了一跳…发现还好…随手打个链式前向星…等等，无向边…看一眼数据范围…512MB…怎么这么大…直接上邻接矩阵…随手打个dfs…所有m == n - 1的点都过了…删dfs，打个bfs，样例1中m == n的数据过了…立马加个判断条件…dfs，bfs一起上…发现好像m == n的数据还是过不了…果断放弃得60分走人…</p><p>T2…填数游戏…看了眼测试数据…果断选择打表(之前疯狂想组合数公式去推，发现还是推不出)…<br>后来讨论的时候发现打表好像打错了…真是难受…</p><p>T3…算了算了，完全没有头绪，不想打…</p><p>后来才知道，原来上一届得了省一的选手这次也来占名额， 说是为提高学校的团体总分…总共就没几个名额…</p><p>还有， 今天三道题都是玄学的dp，T1基环树dp没学，T3动态dp没学…..</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>D1原题，D2神题<br><del>哪位出题啊</del><br>回想D1T1是多么容易…为什么会往线段树方面想…<br>尽管也能做就是了<br>滚去补文化课了<br>希望大家好运<br>还有一个教训…不能说太多的NOIP RP++，不能放太多的&lt;&lt;好运来&gt;&gt;…<del>RP溢出成为负数!!!</del><br>技不如人，甘拜下风…<br>这是给自己的教训…<br>要学的还有很多啊…<br>这次我努力了，我也尽力了…<br>但不会放弃我这颗热爱的心…<br>万一就有奇迹…<br>NOIP2018，也许是低谷，但它绝不是终点…<br>我会努力的…<br>加油！</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>日志</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>lsilencej的测试博客</title>
    <link href="/2018/10/06/test/"/>
    <url>/2018/10/06/test/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是lsilencej的第一个博客</p><span id="more"></span><p>用来测试</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>日志</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
